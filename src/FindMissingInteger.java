import java.util.ArrayList;

public class FindMissingInteger {
	public int firstMissingPositive(ArrayList<Integer> a) {
	    int n = a.size();
	    int current, indexOfOne = -1;
	    for(int i=0;i<n;i++){
	        current=a.get(i);
	        if(current==1)
	        	indexOfOne=current;
	        if(current<=0||current>=n+1){
	            a.set(i, 1);
	        }
	    }
	   System.out.println(indexOfOne);
	    for(int i=0; i<n;i++){
	        current=Math.abs(a.get(i));
	        if(current==1&&indexOfOne==i)
	        	a.set(0,  a.get(0)>0 ? -a.get(0): a.get(0));
	        else if(current!=1)
	            a.set(current-1, a.get(current-1)>0 ? -a.get(current-1): a.get(current-1));
	        
	    }
	    System.out.println(a);
	   for(int i=0;i<n;i++){
	       if(a.get(i)>=0){
	           return i+1;
	       }
	   }
	   //System.out.println(a);
        return n+1;
	}
	public static void main(String[] args){
		//int[] arr={699, 2, 690, 936, 319, 784, 562, 35, 151, 698, 126, 730, 587, 157, 201, 761, 956, 359, 198, 986, 915, 7, 703, 324, 814, 382, 294, 204, 120, 731, 615, 330, 486, 52, 223, 376, 649, 458, 564, 971, 72, 605, 177, 20, 461, 790, 872, 363, 916, 435, 991, 184, 410, 320, 16, 480, 768, 801, 117, 338, 650, 786, 17, 369, 979, 304, 445, 688, 862, 229, 311, 351, 985, 697, 135, 299, 310, 3, 643, 221, 831, 196, 887, 679, 484, 209, 824, 292, 588, 721, 140, 675, 827, 913, 271, 170, 812, 552, 334, 860, 981, 550, 308, 584, 442, 328, 251, 456, 976, 31, 507, 954, 982, 742, 45, 727, 794, 309, 527, 623, 56, 843, 436, 681, 143, 130, 689, 870, 362, 580, 560, 474, 385, 525, 881, 51, 890, 917, 820, 826, 139, 443, 978, 144, 512, 205, 682, 188, 344, 429, 497, 181, 749, 864, 664, 145, 621, 629, 886, 572, 89, 725, 945, 29, 553, 977, 783, 590, 236, 728, 125, 90, 492, 261, 543, 259, 662, 622, 285, 392, 561, 670, 200, 504, 246, 513, 910, 583, 460, 179, 207, 709, 127, 926, 816, 426, 520, 174, 464, 883, 780, 5, 268, 606, 1, 109, 704, 391, 661, 924, 516, 241, 477, 952, 405, 522, 247, 335, 356, 839, 423, 779, 4, 43, 720, 238, 965, 951, 914, 10, 496, 775, 651, 788, 373, 491, 746, 799, 518, 93, 86, 774, 652, 955, 494, 252, 781, 946, 412, 202, 741, 719, 612, 673, 896, 1000, 289, 554, 69, 424, 980, 506, 593, 889, 25, 959, 28, 736, 8, 969, 865, 657, 567, 434, 9, 167, 357, 929, 645, 250, 565, 94, 928, 473, 509, 823, 313, 762, -1, 208, 903, 922, 655, 948, 326, 485, 150, 73, 505, 225, 122, 129, 648, 838, 811, 972, 735, 78, 428, 740, 782, 632, 316, 440, 737, 297, 873, 281, 479, 654, 0, 633, 212, 152, 154, 470, 866, 79, 722, 958, 732, 900, 832, 278, 58, 842, 745, 540, 169, 347, 592, 438, 882, 462, 53, 34, 519, 489, 85, 757, 919, 701, 15, 211, 667, 637, 74, 573, 240, 559, -2, 472, 203, 112, 162, 776, -4, 155, 837, 99, 98, 64, 101, 983, 366, 853, 970, 482, 40, 921, 374, 758, 413, 339, 705, 771, 360, 734, 282, 219, 766, 535, 133, 532, 254};
		int[] arr = { 229, 888, 742, 191, 843, 721, 268, 439, 238, 585, 120, 514, 201, 829, 334, 467, 636, 735, 743, 405, 541, 710, 798, 632, 397, 625, 440, 508, 794, 696, 319, 810, 297, 369, 425, 617, 520, 216, 43, 759, 258, 914, 863, 929, 638, 656, 699, 648, 275, 786, 315, 370, 462, 969, 828, 727, 756, 200, 243, 842, 46, 110, 158, 361, 224, 560, 539, 874, 505, 621, 661, 8, 808, 635, 609, 213, 844, 67, 922, 74, 481, 237, 174, 449, 40, 154, 905, 571, 558, 952, 24, 658, 662, 179, 686, -4, 784, 300, 755, 873, 618, 981, 928, 286, 188, 150, 73, 1000, 598, 225, 814, 595, 532, 673, 793, 290, 774, 909, 876, 855, 375, 235, 524, 365, 613, 333, 7, 336, 848, 959, 797, 328, 90, 629, 140, 59, 69, 339, 640, 199, 732, 317, 395, 940, 263, 799, 172, 570, 56, 730, 468, 461, 801, 282, 502, 389, 295, 871, 740, 921, 35, 933, 690, 717, 778, 48, 547, 257, 823, 272, 985, 681, 528, 204, 536, 889, 486, 305, 586, 956, 861 };
		ArrayList<Integer> list = new ArrayList<Integer>();
		for(int v: arr){
			list.add(v);
		}
		System.out.println(list.size());
		new FindMissingInteger().firstMissingPositive(list);
	}
}
